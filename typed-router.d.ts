/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/articles/[slug]/': RouteRecordInfo<'/articles/[slug]/', '/articles/:slug', { slug: ParamValue<true> }, { slug: ParamValue<false> }>,
    '/articles/[slug]/edit': RouteRecordInfo<'/articles/[slug]/edit', '/articles/:slug/edit', { slug: ParamValue<true> }, { slug: ParamValue<false> }>,
    '/articles/create': RouteRecordInfo<'/articles/create', '/articles/create', Record<never, never>, Record<never, never>>,
    '/feed': RouteRecordInfo<'/feed', '/feed', Record<never, never>, Record<never, never>>,
    '/login': RouteRecordInfo<'/login', '/login', Record<never, never>, Record<never, never>>,
    '/profiles/[username]/': RouteRecordInfo<'/profiles/[username]/', '/profiles/:username', { username: ParamValue<true> }, { username: ParamValue<false> }>,
    '/profiles/[username]/favorites': RouteRecordInfo<'/profiles/[username]/favorites', '/profiles/:username/favorites', { username: ParamValue<true> }, { username: ParamValue<false> }>,
    '/register': RouteRecordInfo<'/register', '/register', Record<never, never>, Record<never, never>>,
    '/settings': RouteRecordInfo<'/settings', '/settings', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/articles/[slug]/index.vue': {
      routes: '/articles/[slug]/'
      views: never
    }
    'src/pages/articles/[slug]/edit.vue': {
      routes: '/articles/[slug]/edit'
      views: never
    }
    'src/pages/articles/create.vue': {
      routes: '/articles/create'
      views: never
    }
    'src/pages/feed.vue': {
      routes: '/feed'
      views: never
    }
    'src/pages/login.vue': {
      routes: '/login'
      views: never
    }
    'src/pages/profiles/[username]/index.vue': {
      routes: '/profiles/[username]/'
      views: never
    }
    'src/pages/profiles/[username]/favorites.vue': {
      routes: '/profiles/[username]/favorites'
      views: never
    }
    'src/pages/register.vue': {
      routes: '/register'
      views: never
    }
    'src/pages/settings.vue': {
      routes: '/settings'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
